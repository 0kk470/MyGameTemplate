//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.Tutorial
{

public sealed partial class TutorialStep :  Bright.Config.BeanBase 
{
    public TutorialStep(JSONNode _json) 
    {
        { if(!_json["texturePath"].IsString) { throw new SerializationException(); }  TexturePath = _json["texturePath"]; }
        { if(!_json["description"]["key"].IsString) { throw new SerializationException(); }  Description_l10n_key = _json["description"]["key"]; if(!_json["description"]["text"].IsString) { throw new SerializationException(); }  Description = _json["description"]["text"]; }
        PostInit();
    }

    public TutorialStep(string texturePath, string description ) 
    {
        this.TexturePath = texturePath;
        this.Description = description;
        PostInit();
    }

    public static TutorialStep DeserializeTutorialStep(JSONNode _json)
    {
        return new Tutorial.TutorialStep(_json);
    }

    public string TexturePath { get; private set; }
    public string Description { get; private set; }
    public string Description_l10n_key { get; }

    public const int __ID__ = 996955098;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        Description = translator(Description_l10n_key, Description);
    }

    public override string ToString()
    {
        return "{ "
        + "TexturePath:" + TexturePath + ","
        + "Description:" + Description + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
